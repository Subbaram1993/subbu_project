name: Trigger Jenkins Build

on:
  push:
    branches:
      - "main"

jobs:
  trigger-jenkins:
    runs-on: self-hosted

    steps:
      - name: Set up Log File and Directory
        run: |
          LOG_DIR="/home/subbaramaiah_ch/Runner/actions-runner/_work/subbu_project/subbu_project/runner_actions"
          mkdir -p "$LOG_DIR"
          LOG_FILE="$LOG_DIR/build_execution.log"
          echo "Starting script execution: $(date)" | tee -a "$LOG_FILE"
        shell: bash

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false  # Disable default GitHub token

      - name: Get Commit Message
        run: |
          LOG_DIR="/home/subbaramaiah_ch/Runner/actions-runner/_work/subbu_project/subbu_project/runner_actions"
          LOG_FILE="$LOG_DIR/build_execution.log"
          COMMIT_MESSAGE=$(git log -1 --pretty=format:%s)
          echo "Commit Message: ${COMMIT_MESSAGE}" | tee -a "$LOG_FILE"
          echo "COMMIT_MESSAGE=${COMMIT_MESSAGE}" >> $GITHUB_ENV
        shell: bash

      - name: Skip build if commit message contains [skip ci]
        run: |
          LOG_DIR="/home/subbaramaiah_ch/Runner/actions-runner/_work/subbu_project/subbu_project/runner_actions"
          LOG_FILE="$LOG_DIR/build_execution.log"
          if echo "${{ env.COMMIT_MESSAGE }}" | grep -q '\[skip ci\]'; then
            echo "Skipping build trigger due to '[skip ci]' in commit message." | tee -a "$LOG_FILE"
            exit 0
          fi
        shell: bash

      - name: Read JSON Configuration
        run: |
          LOG_DIR="/home/subbaramaiah_ch/Runner/actions-runner/_work/subbu_project/subbu_project/runner_actions"
          LOG_FILE="$LOG_DIR/build_execution.log"
          if [ -f config.json ]; then
            JOB_NAME=$(jq -r '.buildConfig.jobName' config.json)
            if [ "$JOB_NAME" == "null" ] || [ -z "$JOB_NAME" ]; then
              echo "Error: 'jobName' not found in config.json" | tee -a "$LOG_FILE"
              exit 1
            fi
            echo "JOB_NAME=${JOB_NAME}" | tee -a "$LOG_FILE"
            echo "JOB_NAME=${JOB_NAME}" >> $GITHUB_ENV
          else
            echo "Error: config.json file not found" | tee -a "$LOG_FILE"
            exit 1
          fi
        shell: bash

      - name: Extract Job Name
        run: |
          LOG_DIR="/home/subbaramaiah_ch/Runner/actions-runner/_work/subbu_project/subbu_project/runner_actions"
          LOG_FILE="$LOG_DIR/build_execution.log"
          EXTRACTED_JOB_NAME=$(echo "${{ env.COMMIT_MESSAGE }}" | grep -oP '(?<=Activity: )\S+' || echo "")
          if [ -z "$EXTRACTED_JOB_NAME" ]; then
            EXTRACTED_JOB_NAME=${{ env.JOB_NAME }}
          fi
          echo "JOB_NAME=${EXTRACTED_JOB_NAME}" | tee -a "$LOG_FILE"
          echo "JOB_NAME=${EXTRACTED_JOB_NAME}" >> $GITHUB_ENV
        shell: bash

      - name: Fetch Local Build Number
        run: |
          LOG_DIR="/home/subbaramaiah_ch/Runner/actions-runner/_work/subbu_project/subbu_project/runner_actions"
          LOG_FILE="$LOG_DIR/build_execution.log"
          BUILD_NUMBER_FILE=".github/build_numbers/old_build_number.txt"
          if [ -f "$BUILD_NUMBER_FILE" ]; then
            LOCAL_BUILD_NUMBER=$(cat "$BUILD_NUMBER_FILE")
          else
            LOCAL_BUILD_NUMBER=0
          fi
          echo "LOCAL_BUILD_NUMBER=${LOCAL_BUILD_NUMBER}" | tee -a "$LOG_FILE"
          echo "LOCAL_BUILD_NUMBER=${LOCAL_BUILD_NUMBER}" >> $GITHUB_ENV
        shell: bash

      - name: Fetch Latest Jenkins Build Number
        run: |
          LOG_DIR="/home/subbaramaiah_ch/Runner/actions-runner/_work/subbu_project/subbu_project/runner_actions"
          LOG_FILE="$LOG_DIR/build_execution.log"
          LATEST_BUILD_NUMBER=$(curl -s -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}" \
              "${{ secrets.JENKINS_URL }}/job/${{ env.JOB_NAME }}/lastBuild/api/json?tree=number" | jq -r '.number')
          echo "LATEST_BUILD_NUMBER=${LATEST_BUILD_NUMBER}" | tee -a "$LOG_FILE"
          echo "LATEST_BUILD_NUMBER=${LATEST_BUILD_NUMBER}" >> $GITHUB_ENV
        shell: bash

      - name: Determine New Build Number
        run: |
          LOG_DIR="/home/subbaramaiah_ch/Runner/actions-runner/_work/subbu_project/subbu_project/runner_actions"
          LOG_FILE="$LOG_DIR/build_execution.log"
          if [ "${{ env.LOCAL_BUILD_NUMBER }}" -ge "${{ env.LATEST_BUILD_NUMBER }}" ]; then
            BUILD_NUMBER=$((LOCAL_BUILD_NUMBER + 1))
          else
            BUILD_NUMBER=$((LATEST_BUILD_NUMBER + 1))
          fi
          BUILD_NUMBER=$(printf "%02d" "$BUILD_NUMBER")
          echo "BUILD_NUMBER=${BUILD_NUMBER}" | tee -a "$LOG_FILE"
          echo "BUILD_NUMBER=${BUILD_NUMBER}" >> $GITHUB_ENV
        shell: bash

      - name: Trigger Jenkins Build
        run: |
          LOG_DIR="/home/subbaramaiah_ch/Runner/actions-runner/_work/subbu_project/subbu_project/runner_actions"
          LOG_FILE="$LOG_DIR/build_execution.log"
          TRIMMED_JENKINS_URL=$(echo "$JENKINS_URL" | sed 's:/*$::')
          CRUMB=$(curl -s -u "$JENKINS_USER:$JENKINS_API_TOKEN" "$TRIMMED_JENKINS_URL/crumbIssuer/api/json" | jq -r '.crumb')

          if [ -z "$CRUMB" ]; then
            echo "Failed to obtain crumb. Exiting." | tee -a "$LOG_FILE"
            exit 1
          fi

          FULL_URL="${TRIMMED_JENKINS_URL}/job/${JOB_NAME}/build"
          response=$(curl -s -o /dev/null -w "%{http_code}" "$FULL_URL" \
               --user "$JENKINS_USER:$JENKINS_API_TOKEN" \
               --header "Jenkins-Crumb:$CRUMB" \
               --header "Content-Type: application/x-www-form-urlencoded" \
               --data-urlencode "BUILD_NUMBER=$BUILD_NUMBER" \
               --data-urlencode "DEPLOY_ENVIRONMENT=development")

          if [ "$response" -ne 201 ]; then
            echo "Error: Jenkins build trigger failed with response code $response. Exiting." | tee -a "$LOG_FILE"
            exit 1
          fi

          echo "Jenkins build triggered successfully." | tee -a "$LOG_FILE"
        shell: bash

      - name: Update Build Numbers Files
        run: |
          LOG_DIR="/home/subbaramaiah_ch/Runner/actions-runner/_work/subbu_project/subbu_project/runner_actions"
          LOG_FILE="$LOG_DIR/build_execution.log"
          OLD_BUILD_NUMBER_FILE=".github/build_numbers/old_build_number.txt"
          NEW_BUILD_NUMBER_FILE=".github/build_numbers/new_build_number.txt"
          mkdir -p .github/build_numbers
          echo "${{ env.LATEST_BUILD_NUMBER }}" > "$OLD_BUILD_NUMBER_FILE"
          echo "${{ env.LATEST_BUILD_NUMBER }} - ${{ env.BUILD_STATUS }}" >> "$NEW_BUILD_NUMBER_FILE"
          git config user.name "Subbaramaiah Chevuru"
          git config user.email "ram.subaram@gmail.com"
          git add "$OLD_BUILD_NUMBER_FILE" "$NEW_BUILD_NUMBER_FILE"
          git commit -m "Update build numbers"
          git push
        shell: bash
